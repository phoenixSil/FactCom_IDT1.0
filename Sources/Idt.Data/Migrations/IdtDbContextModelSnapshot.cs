// <auto-generated />
using System;
using Idt.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Idt.Data.Migrations
{
    [DbContext(typeof(IdtDbContext))]
    partial class IdtDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.16");

            modelBuilder.Entity("Idt.Domain.Adresse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Cellulaire")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateDeCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateDeModification")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EstAdressePrincipale")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pays")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Telephone")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UtilisateurId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("Idt.Domain.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateDeCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateDeModification")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EstLue")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UtilisateurId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Idt.Domain.Utilisateur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateDeCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateDeModification")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PseudoUtilisateur")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UtilisateurId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("Idt.Domain.Adresse", b =>
                {
                    b.HasOne("Idt.Domain.Utilisateur", "Utilisateur")
                        .WithMany("Adresses")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("Idt.Domain.Message", b =>
                {
                    b.HasOne("Idt.Domain.Utilisateur", "Utilisateur")
                        .WithMany("Messages")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("Idt.Domain.Utilisateur", b =>
                {
                    b.Navigation("Adresses");

                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
